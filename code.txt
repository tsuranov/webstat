#######################################################################
feedparser
#######################################################################
отслеживание изменений через feed.etag и feed.modified
https://pythonhosted.org/feedparser/http-etag.html

last_etag = feed.etag
last_modified = feed.modified

feed_update = feedparser.parse(url, etag=last_etag, modified=last_modified)

if feed_update.status == 304:
    # no changes



#######################################################################
feed
item.title			original feed
item.title_detail.value		parser's
item.summary			original feed
item.summary_detail.value	parser's
item.published			original feed
item.published_parsed		parser's
item.link




#######################################################################
asyncpg
#######################################################################
https://habr.com/post/337420/
https://magicstack.github.io/asyncpg/current/
https://magicstack.github.io/asyncpg/current/usage.html
-> python asyncpg


async def gr1():
	await asyncio.sleep(2)
async def gr2():
	await asyncio.sleep(2)
async def gr3():
	await asyncio.sleep(2)


ioloop = asyncio.get_event_loop()
tasks = [
    ioloop.create_task(gr1()),
    ioloop.create_task(gr2()),
    ioloop.create_task(gr3())
]
ioloop.run_until_complete(asyncio.wait(tasks))
ioloop.close()

#######################################################################
work
#######################################################################

#print ("Start read RSS Lenta.ru")
#url = 'https://lenta.ru/rss'
#rssdates = feedparser.parse(url)

#print (rssdates.modified_parsed)
#print (rssdates.etag)
#last_etag = rssdates.etag

#etag=rssdates.etag, modified=rssdates.modified
#rssdates = feedparser.parse(url, etag=last_etag)
#if rssdates.status == 304:
#    print ("no changes")


#print (rssdates.version)
#print (d.feed.title)
#print (d.feed.link)
#print (d.feed.description)

#print (len(d.entries))

#for item in d.entries:
#    print ("-----------------------------------", "\n")
#    print (item.title, "\n", item.title_detail.value, "\n")
#    print ("##########################", "\n")
#    print (item.summary, "\n")
#    print ("##########################", "\n")
#    print (item.summary_detail.value, "\n")
#    print ("##########################", "\n")
#    print (item.published)
#    print ("##########################", "\n")
#    print (item.link)

async def run():
    conn = await asyncpg.connect(user='webuser', password='!23456', database='webstat', host='10.10.10.10')
    values = await conn.fetch('''SELECT * FROM rss_lenta_ru''')
    await conn.close()

loop = asyncio.get_event_loop()
loop.run_until_complete(run())





#print (item.published, "\n")
Fri, 15 Jun 2018 13:49:00 +0300
Fri, 15 Jun 2018 13:47:00 +0300
Fri, 15 Jun 2018 13:41:00 +0300
Fri, 15 Jun 2018 13:32:00 +0300
Fri, 15 Jun 2018 13:30:57 +0300
Fri, 15 Jun 2018 13:30:51 +0300
"%a, %d %b %Y %H:%M:%S +0000"


#postgresql
1971-07-13 00:00:00+05

strftime("%Y-%m-%d %H:%M:%S+00")


print ("\n")
tt = datetime.datetime.strptime("Fri, 15 Jun 2018 13:30:51 +0300", "%a, %d %b %Y %H:%M:%S %z")
print ("\n")



















